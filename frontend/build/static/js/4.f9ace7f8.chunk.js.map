{"version":3,"sources":["components/CheckoutSteps.jsx","screens/PlaceOrderScreen.jsx"],"names":["CheckoutSteps","step1","step2","step3","step4","className","Item","to","Link","disabled","PlaceOrderScreen","history","dispatch","useDispatch","cart","useSelector","state","addDecimals","num","Math","round","toFixed","itemsPrice","cartItems","reduce","acc","item","price","qty","shippingPrice","taxPrice","Number","totalPrice","orderCreate","order","success","error","useEffect","push","_id","forEach","removeFromCart","product","md","variant","shippingAddress","address","city","postalCode","country","paymentMethod","length","map","src","image","alt","name","fluid","rounded","toLocaleString","type","onClick","createOrder","orderItems"],"mappings":"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","file":"static/js/4.f9ace7f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justift-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { removeFromCart } from \"../actions/cartActions\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  //Calculate Prices\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0),\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice * 0.12);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      cart.cartItems.forEach((item) => dispatch(removeFromCart(item.product)));\r\n    }\r\n    if (error) {\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      }),\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2> Payment Method</h2>\r\n              <strong> Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item) => (\r\n                    <ListGroup.Item key={item.product}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x&ensp;${\" \"}\r\n                          {item.price.toLocaleString(\"en-US\")}\r\n                          <br></br>\r\n                          <strong>Total:</strong>\r\n                          {(item.qty * item.price).toLocaleString(\"en-US\")}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>$ {Number(cart.itemsPrice).toLocaleString(\"en-US\")}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>\r\n                    $ {Number(cart.shippingPrice).toLocaleString(\"en-US\")}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>$ {Number(cart.taxPrice).toLocaleString(\"en-US\")}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>$ {Number(cart.totalPrice).toLocaleString(\"en-US\")}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}>\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n"],"sourceRoot":""}
{"version":3,"sources":["screens/UserEditScreen.jsx"],"names":["UserEditScreen","match","history","userId","params","id","useState","email","setemail","name","setName","isAdmin","setisAdmin","dispatch","useDispatch","useSelector","state","userDetails","loading","error","user","userUpdate","loadingUpdate","errorupdate","successUpadte","success","useEffect","type","USER_UPDATE_RESET","push","_id","getUserDetails","to","className","variant","onSubmit","e","preventDefault","updateUser","Group","controlId","Label","Control","placeholder","value","onChange","target","Check","checked","label"],"mappings":"8MAmGeA,UAzFQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACzBC,EAASF,EAAMG,OAAOC,GAC5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAWC,cACjB,EAAiCC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAtDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAElBC,EAAaN,aAAY,SAACC,GAAD,OAAWA,EAAMK,cAC/BC,EAA8DD,EAAvEH,QAA+BK,EAAwCF,EAA/CF,MAA6BK,EAAkBH,EAA3BI,QACpDC,qBAAU,WACJF,IACFX,EAAS,CAAEc,KAAMC,MACjB1B,EAAQ2B,KAAK,oBAEVT,GAASA,EAAKX,MAAQW,EAAKU,MAAQ3B,GAGtCO,EAAQU,EAAKX,MACbD,EAASY,EAAKb,OACdK,EAAWQ,EAAKT,UAJhBE,EAASkB,YAAe5B,MAMzB,CAACiB,EAAMP,EAAUV,EAAQqB,EAAetB,IAc3C,OACE,qCACE,cAAC,OAAD,CAAM8B,GAAG,kBAAkBC,UAAU,qBAArC,qBAIA,eAAC,IAAD,WACE,4CACCX,GAAiB,cAAC,IAAD,IACjBC,GAAe,cAAC,IAAD,CAASW,QAAQ,SAAjB,SAA2BX,IAC1CL,EACC,cAAC,IAAD,IACEC,EACF,cAAC,IAAD,CAASe,QAAQ,SAAjB,SAA2Bf,IAE3B,eAAC,IAAD,CAAMgB,SA3BQ,SAACC,GACrBA,EAAEC,iBACFxB,EACEyB,YAAW,CACTR,IAAK3B,EACLM,OACAF,QACAI,cAoBE,UACE,eAAC,IAAK4B,MAAN,CAAYC,UAAU,OAAtB,UACE,cAAC,IAAKC,MAAN,8BACA,cAAC,IAAKC,QAAN,CACEf,KAAK,OACLgB,YAAY,0BACZC,MAAOnC,EACPoC,SAAU,SAACT,GAAD,OAAO1B,EAAQ0B,EAAEU,OAAOF,aAGtC,eAAC,IAAKL,MAAN,CAAYC,UAAU,QAAtB,UACE,cAAC,IAAKC,MAAN,4BACA,cAAC,IAAKC,QAAN,CACEf,KAAK,QACLgB,YAAY,gBACZC,MAAOrC,EACPsC,SAAU,SAACT,GAAD,OAAO5B,EAAS4B,EAAEU,OAAOF,aAGvC,cAAC,IAAKL,MAAN,CAAYC,UAAU,UAAtB,SACE,cAAC,IAAKO,MAAN,CACEpB,KAAK,WACLqB,QAASrC,EACTsC,MAAM,WACNJ,SAAU,SAACT,GAAD,OAAOxB,EAAWwB,EAAEU,OAAOE,cAGzC,cAAC,IAAD,CAAQrB,KAAK,SAASO,QAAQ,UAA9B","file":"static/js/10.eeec718b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n  const [email, setemail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isAdmin, setisAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n  const { loading, error, user } = useSelector((state) => state.userDetails);\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading: loadingUpdate, error: errorupdate, success: successUpadte } = userUpdate;\n  useEffect(() => {\n    if (successUpadte) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    }\n    if (!user || !user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setemail(user.email);\n      setisAdmin(user.isAdmin);\n    }\n  }, [user, dispatch, userId, successUpadte, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateUser({\n        _id: userId,\n        name,\n        email,\n        isAdmin,\n      }),\n    );\n  };\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1> Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorupdate && <Message variant='danger'>{errorupdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Enter Your Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='First Name  & Last Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Email Address'\n                value={email}\n                onChange={(e) => setemail(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                checked={isAdmin}\n                label='Is Admin'\n                onChange={(e) => setisAdmin(e.target.checked)}></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n"],"sourceRoot":""}
{"version":3,"sources":["screens/ProductListScreen.jsx"],"names":["ProductListScreen","history","pageNumber","match","params","dispatch","useDispatch","productList","useSelector","state","loading","error","products","page","pages","productCreate","loadingCreate","errorCreate","successCreate","success","createdProduct","product","productDelete","loadingDelete","errorDelete","successDelete","userInfo","userLogin","useEffect","type","PRODUCT_CREATE_RESET","isAdmin","push","_id","listProducts","Fragment","className","onClick","createProduct","variant","striped","bordered","hover","responsive","map","name","price","category","brand","to","id","window","confirm","deleteProduct"],"mappings":"oGAAA,2HA6GeA,UAnGW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QACrBC,EAD0C,EAAZC,MACXC,OAAOF,YAAc,EACxCG,EAAWC,cACXC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMF,eACzCG,EAA0CH,EAA1CG,QAASC,EAAiCJ,EAAjCI,MAAOC,EAA0BL,EAA1BK,SAAUC,EAAgBN,EAAhBM,KAAMC,EAAUP,EAAVO,MAElCC,EAAgBP,aAAY,SAACC,GAAD,OAAWA,EAAMM,iBAElCC,EAAuFD,EAAhGL,QAA+BO,EAAiEF,EAAxEJ,MAA6BO,EAA2CH,EAApDI,QAAiCC,EAAmBL,EAA5BM,QAEtEC,EAAgBd,aAAY,SAACC,GAAD,OAAWA,EAAMa,iBAClCC,EAA8DD,EAAvEZ,QAA+Bc,EAAwCF,EAA/CX,MAA6Bc,EAAkBH,EAA3BH,QAE5CO,EAAalB,aAAY,SAACC,GAAD,OAAWA,EAAMkB,aAA1CD,SAERE,qBAAU,WACRvB,EAAS,CAAEwB,KAAMC,MACZJ,EAASK,SACZ9B,EAAQ+B,KAAK,UAGXd,EACFjB,EAAQ+B,KAAR,yBAA+BZ,EAAea,IAA9C,UAEA5B,EAAS6B,YAAa,GAAIhC,MAE3B,CAACG,EAAUJ,EAASyB,EAAUD,EAAeP,EAAeE,EAAgBlB,IAW/E,OACE,eAAC,IAAMiC,SAAP,WACE,eAAC,IAAD,CAAKC,UAAU,qBAAf,UACE,cAAC,IAAD,UACE,4CAEF,cAAC,IAAD,CAAKA,UAAU,aAAf,SACE,eAAC,IAAD,CAAQA,UAAU,OAAOC,QAVJ,WAC3BhC,EAASiC,gBASH,gCACuB,mBAAGF,UAAU,wBAIvCb,GAAiB,cAAC,IAAD,IACjBC,GAAe,cAAC,IAAD,CAASe,QAAQ,SAAjB,SAA2Bf,IAC1CR,GAAiB,cAAC,IAAD,IACjBC,GAAe,cAAC,IAAD,CAASsB,QAAQ,SAAjB,SAA2BtB,IAC1CP,EACC,cAAC,IAAD,IACEC,EACF,cAAC,IAAD,CAAS4B,QAAQ,SAAjB,SAA2B5B,IAE3B,eAAC,IAAD,CAAO6B,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACP,UAAU,WAAnD,UACE,gCACE,+BACE,oCACA,sCACA,uCACA,0CACA,uCACA,8CAGJ,gCACGxB,EAASgC,KAAI,SAACvB,GACb,OACE,+BACE,mCAAMA,EAAQY,OACd,mCAAMZ,EAAQwB,QACd,oCAAOxB,EAAQyB,SACf,6BAAKzB,EAAQ0B,WACb,6BAAK1B,EAAQ2B,QACb,+BACE,cAAC,gBAAD,CAAeC,GAAE,yBAAoB5B,EAAQY,IAA5B,SAAjB,SACE,cAAC,IAAD,CAAQM,QAAQ,QAAQH,UAAU,SAAlC,SACE,mBAAGA,UAAU,oBAGjB,cAAC,IAAD,CAAQG,QAAQ,SAASH,UAAU,SAASC,QAAS,kBAxDhDa,EAwDoE7B,EAAQY,SAvD7FkB,OAAOC,QAAQ,iBAEjB/C,EAASgD,YAAcH,KAHL,IAACA,GAwDL,SACE,mBAAGd,UAAU,wBAbVf,EAAQY,aAsB3B,cAAC,IAAD,CAAUnB,MAAOA,EAAOD,KAAMA,EAAMkB,SAAS","file":"static/js/9.e81c3375.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProducts, deleteProduct, createProduct } from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstats\";\nimport Paginate from \"../components/Paginate\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const productCreate = useSelector((state) => state.productCreate);\n\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete;\n\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(\"\", pageNumber));\n    }\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure\")) {\n      //DELETE PRODUCTS\n      dispatch(deleteProduct(id));\n    }\n  };\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n  return (\n    <React.Fragment>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            Create Product&nbsp; <i className='fas fa-plus'></i>\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Category</th>\n              <th>Brand</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => {\n              return (\n                <tr key={product._id}>\n                  <td> {product._id}</td>\n                  <td> {product.name}</td>\n                  <td>$ {product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      )}\n      <Paginate pages={pages} page={page} isAdmin={true} />\n    </React.Fragment>\n  );\n};\n\nexport default ProductListScreen;\n"],"sourceRoot":""}
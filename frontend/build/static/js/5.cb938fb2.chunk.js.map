{"version":3,"sources":["components/CheckoutSteps.jsx","screens/ShippingScreen.jsx"],"names":["CheckoutSteps","step1","step2","step3","step4","className","Item","to","Link","disabled","ShippingScreen","history","shippingAddress","useSelector","state","cart","dispatch","useDispatch","useState","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","onSubmit","e","preventDefault","saveShippingAddress","push","Group","controlId","Label","Control","required","type","placeholder","value","onChange","target","variant"],"mappings":"oGAAA,iCAkDeA,IA9CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,eAAC,IAAD,CAAKC,UAAU,8BAAf,UACE,cAAC,IAAIC,KAAL,UACGL,EACC,cAAC,gBAAD,CAAeM,GAAG,SAAlB,SACE,cAAC,IAAIC,KAAL,wBAGF,cAAC,IAAIA,KAAL,CAAUC,UAAQ,EAAlB,uBAIJ,cAAC,IAAIH,KAAL,UACGJ,EACC,cAAC,gBAAD,CAAeK,GAAG,YAAlB,SACE,cAAC,IAAIC,KAAL,yBAGF,cAAC,IAAIA,KAAL,CAAUC,UAAQ,EAAlB,wBAIJ,cAAC,IAAIH,KAAL,UACGH,EACC,cAAC,gBAAD,CAAeI,GAAG,WAAlB,SACE,cAAC,IAAIC,KAAL,wBAGF,cAAC,IAAIA,KAAL,CAAUC,UAAQ,EAAlB,uBAIJ,cAAC,IAAIH,KAAL,UACGF,EACC,cAAC,gBAAD,CAAeG,GAAG,cAAlB,SACE,cAAC,IAAIC,KAAL,4BAGF,cAAC,IAAIA,KAAL,CAAUC,UAAQ,EAAlB,gC,oHCiCKC,UApEQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChBC,EAAoBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAjDH,gBACFI,EAAWC,cAEjB,EAA8BC,mBAASN,EAAgBO,SAAvD,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAASN,EAAgBS,MAAjD,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoCJ,mBAASN,EAAgBW,YAA7D,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,mBAASN,EAAgBa,SAAvD,mBAAOA,EAAP,KAAgBC,EAAhB,KAQA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAezB,OAAK,EAACC,OAAK,IAC1B,2CACA,eAAC,IAAD,CAAMyB,SAVoB,SAACC,GAC7BA,EAAEC,iBACFb,EAASc,YAAoB,CAAEX,UAASE,OAAME,aAAYE,aAC1Dd,EAAQoB,KAAK,aAOX,UACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAAC,IAAKC,MAAN,sBACA,cAAC,IAAKC,QAAN,CACEC,UAAQ,EACRC,KAAK,OACLC,YAAY,gBACZC,MAAOpB,EACPqB,SAAU,SAACZ,GAAD,OAAOR,EAAWQ,EAAEa,OAAOF,aAGzC,eAAC,IAAKP,MAAN,CAAYC,UAAU,OAAtB,UACE,cAAC,IAAKC,MAAN,mBACA,cAAC,IAAKC,QAAN,CACEC,UAAQ,EACRC,KAAK,OACLC,YAAY,aACZC,MAAOlB,EACPmB,SAAU,SAACZ,GAAD,OAAON,EAAQM,EAAEa,OAAOF,aAGtC,eAAC,IAAKP,MAAN,CAAYC,UAAU,cAAtB,UACE,cAAC,IAAKC,MAAN,0BACA,cAAC,IAAKC,QAAN,CACEC,UAAQ,EACRC,KAAK,OACLC,YAAY,oBACZC,MAAOhB,EACPiB,SAAU,SAACZ,GAAD,OAAOJ,EAAcI,EAAEa,OAAOF,aAG5C,eAAC,IAAKP,MAAN,CAAYC,UAAU,UAAtB,UACE,cAAC,IAAKC,MAAN,sBACA,cAAC,IAAKC,QAAN,CACEC,UAAQ,EACRC,KAAK,OACLC,YAAY,gBACZC,MAAOd,EACPe,SAAU,SAACZ,GAAD,OAAOF,EAAWE,EAAEa,OAAOF,aAGzC,cAAC,IAAD,CAAQF,KAAK,SAASK,QAAQ,UAA9B","file":"static/js/5.cb938fb2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justift-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const shippingSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1> Shipping</h1>\r\n      <Form onSubmit={shippingSubmitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter Address'\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postal Code'>\r\n          <Form.Label>postal Code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter postal Code'\r\n            value={postalCode}\r\n            onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='Country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Enter Country'\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n"],"sourceRoot":""}